device pistons_mobiles "MG:V1 Pistons Mobiles"
device plates_mobiles "MG:V1 Patins Mobiles"
device plates_fixes "MG:V1 Patins Fixes"

set plates_mobiles Autolock 0
set plates_fixes Autolock 0

define kp 1
move max_piston 10
move min_piston 0
set pistons_mobiles UpperLimit max_piston
set pistons_mobiles LowerLimit min_piston

device sensor_front "M:Capteur Avant"
set sensor_front "Detect Players" 0
set sensor_front "Detect Subgrids" 1
set sensor_front "Detect Stations" 1
set sensor_front Bottom 0.1
set sensor_front Top 0.1
set sensor_front Back 0.1
set sensor_front Front 2.5
set sensor_front Left 0.1
set sensor_front Right 0.1

j end

pistons_mobiles_push:
	get position pistons_mobiles Position 3
	get isActive sensor_front IsActive 3
	select kp isActive 0.1 1
	sub err max_piston position
	mul cmd err kp
	max cmd cmd 0.5
	set pistons_mobiles Velocity cmd
	print position
	abs err err
	sle state err 0.1
	#select state isActive 1 state
	mul stage_next stage_next state
j ra

pistons_mobiles_retract:
	get position pistons_mobiles Position 3
	get isActive sensor_front IsActive 3
	select kp isActive 0.1 1
	sub err min_piston position
	mul cmd err kp
	min cmd cmd -0.5
	set pistons_mobiles Velocity cmd
	print position
	abs err err
	sle state err 0.1
	mul stage_next stage_next state
j ra

plates_mobiles_lock:
	action plates_mobiles Lock
	get lock_mode plates_mobiles LockMode 3
	print lock_mode
	seq state lock_mode 2
	mul stage_next stage_next state
j ra

plates_mobiles_unlock:
	action plates_mobiles Unlock
	get lock_mode plates_mobiles LockMode 3
	print lock_mode
	seq state lock_mode 1
	mul stage_next stage_next state
j ra

plates_fixes_lock:
	action plates_fixes Lock
	get lock_mode plates_fixes LockMode 3
	print lock_mode
	seq state lock_mode 2
	mul stage_next stage_next state
j ra

plates_fixes_unlock:
	action plates_fixes Unlock
	get lock_mode plates_fixes LockMode 3
	print lock_mode
	seq state lock_mode 1
	mul stage_next stage_next state
j ra

execute_forward:
	move stage 0
	move stage_count 0
loop_forward:
	yield
	move stage_next 1
	beqal stage 0 plates_fixes_unlock
	beqal stage 0 plates_mobiles_lock
	beqal stage 1 pistons_mobiles_push
	beqal stage 2 plates_fixes_lock
	beqal stage 2 plates_mobiles_unlock
	beqal stage 3 pistons_mobiles_retract
	beqal stage 4 plates_mobiles_lock
	add stage stage stage_next
	beq stage 5 end
j loop_forward

execute_backward:
	move stage 0
	move stage_count 0
loop_backward:
	yield
	move stage_next 1
	beqal stage 0 plates_fixes_lock
	beqal stage 0 plates_mobiles_unlock
	beqal stage 1 pistons_mobiles_push
	beqal stage 2 plates_fixes_unlock
	beqal stage 2 plates_mobiles_lock
	beqal stage 3 pistons_mobiles_retract
	beqal stage 4 plates_fixes_lock
	add stage stage stage_next
	beq stage 5 end
j loop_backward

end:

